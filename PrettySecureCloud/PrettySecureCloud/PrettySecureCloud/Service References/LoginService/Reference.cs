//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrettySecureCloud.LoginService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/PrettySecureCloud")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string MailField;
        
        private string PrivateKeyField;
        
        private string PublicKeyField;
        
        private System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.CloudService> ServicesField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateKey {
            get {
                return this.PrivateKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateKeyField, value) != true)) {
                    this.PrivateKeyField = value;
                    this.RaisePropertyChanged("PrivateKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicKey {
            get {
                return this.PublicKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicKeyField, value) != true)) {
                    this.PublicKeyField = value;
                    this.RaisePropertyChanged("PublicKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.CloudService> Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CloudService", Namespace="http://schemas.datacontract.org/2004/07/PrettySecureCloud")]
    public partial class CloudService : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string LoginTokenField;
        
        private string NameField;
        
        private PrettySecureCloud.LoginService.ServiceType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginToken {
            get {
                return this.LoginTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginTokenField, value) != true)) {
                    this.LoginTokenField = value;
                    this.RaisePropertyChanged("LoginToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrettySecureCloud.LoginService.ServiceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/PrettySecureCloud")]
    public partial class ServiceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private string NameField;
        
        private string SecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Secret {
            get {
                return this.SecretField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretField, value) != true)) {
                    this.SecretField = value;
                    this.RaisePropertyChanged("Secret");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginService.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/UsernameUnique", ReplyAction="http://tempuri.org/ILoginService/UsernameUniqueResponse")]
        System.IAsyncResult BeginUsernameUnique(string username, System.AsyncCallback callback, object asyncState);
        
        bool EndUsernameUnique(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/EmailUnique", ReplyAction="http://tempuri.org/ILoginService/EmailUniqueResponse")]
        System.IAsyncResult BeginEmailUnique(string username, System.AsyncCallback callback, object asyncState);
        
        bool EndEmailUnique(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/Register", ReplyAction="http://tempuri.org/ILoginService/RegisterResponse")]
        System.IAsyncResult BeginRegister(string username, string mail, string password, System.AsyncCallback callback, object asyncState);
        
        void EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        PrettySecureCloud.LoginService.User EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/Update", ReplyAction="http://tempuri.org/ILoginService/UpdateResponse")]
        System.IAsyncResult BeginUpdate(PrettySecureCloud.LoginService.User newUserData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/LoadAllServices", ReplyAction="http://tempuri.org/ILoginService/LoadAllServicesResponse")]
        System.IAsyncResult BeginLoadAllServices(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> EndLoadAllServices(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : PrettySecureCloud.LoginService.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsernameUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UsernameUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmailUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PrettySecureCloud.LoginService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PrettySecureCloud.LoginService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadAllServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadAllServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<PrettySecureCloud.LoginService.ILoginService>, PrettySecureCloud.LoginService.ILoginService {
        
        private BeginOperationDelegate onBeginUsernameUniqueDelegate;
        
        private EndOperationDelegate onEndUsernameUniqueDelegate;
        
        private System.Threading.SendOrPostCallback onUsernameUniqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmailUniqueDelegate;
        
        private EndOperationDelegate onEndEmailUniqueDelegate;
        
        private System.Threading.SendOrPostCallback onEmailUniqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDelegate;
        
        private EndOperationDelegate onEndUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadAllServicesDelegate;
        
        private EndOperationDelegate onEndLoadAllServicesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadAllServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), LoginServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public LoginServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LoginServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UsernameUniqueCompletedEventArgs> UsernameUniqueCompleted;
        
        public event System.EventHandler<EmailUniqueCompletedEventArgs> EmailUniqueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCompleted;
        
        public event System.EventHandler<LoadAllServicesCompletedEventArgs> LoadAllServicesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginUsernameUnique(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUsernameUnique(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrettySecureCloud.LoginService.ILoginService.EndUsernameUnique(System.IAsyncResult result) {
            return base.Channel.EndUsernameUnique(result);
        }
        
        private System.IAsyncResult OnBeginUsernameUnique(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginUsernameUnique(username, callback, asyncState);
        }
        
        private object[] OnEndUsernameUnique(System.IAsyncResult result) {
            bool retVal = ((PrettySecureCloud.LoginService.ILoginService)(this)).EndUsernameUnique(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUsernameUniqueCompleted(object state) {
            if ((this.UsernameUniqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UsernameUniqueCompleted(this, new UsernameUniqueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UsernameUniqueAsync(string username) {
            this.UsernameUniqueAsync(username, null);
        }
        
        public void UsernameUniqueAsync(string username, object userState) {
            if ((this.onBeginUsernameUniqueDelegate == null)) {
                this.onBeginUsernameUniqueDelegate = new BeginOperationDelegate(this.OnBeginUsernameUnique);
            }
            if ((this.onEndUsernameUniqueDelegate == null)) {
                this.onEndUsernameUniqueDelegate = new EndOperationDelegate(this.OnEndUsernameUnique);
            }
            if ((this.onUsernameUniqueCompletedDelegate == null)) {
                this.onUsernameUniqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUsernameUniqueCompleted);
            }
            base.InvokeAsync(this.onBeginUsernameUniqueDelegate, new object[] {
                        username}, this.onEndUsernameUniqueDelegate, this.onUsernameUniqueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginEmailUnique(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmailUnique(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrettySecureCloud.LoginService.ILoginService.EndEmailUnique(System.IAsyncResult result) {
            return base.Channel.EndEmailUnique(result);
        }
        
        private System.IAsyncResult OnBeginEmailUnique(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginEmailUnique(username, callback, asyncState);
        }
        
        private object[] OnEndEmailUnique(System.IAsyncResult result) {
            bool retVal = ((PrettySecureCloud.LoginService.ILoginService)(this)).EndEmailUnique(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmailUniqueCompleted(object state) {
            if ((this.EmailUniqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmailUniqueCompleted(this, new EmailUniqueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmailUniqueAsync(string username) {
            this.EmailUniqueAsync(username, null);
        }
        
        public void EmailUniqueAsync(string username, object userState) {
            if ((this.onBeginEmailUniqueDelegate == null)) {
                this.onBeginEmailUniqueDelegate = new BeginOperationDelegate(this.OnBeginEmailUnique);
            }
            if ((this.onEndEmailUniqueDelegate == null)) {
                this.onEndEmailUniqueDelegate = new EndOperationDelegate(this.OnEndEmailUnique);
            }
            if ((this.onEmailUniqueCompletedDelegate == null)) {
                this.onEmailUniqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmailUniqueCompleted);
            }
            base.InvokeAsync(this.onBeginEmailUniqueDelegate, new object[] {
                        username}, this.onEndEmailUniqueDelegate, this.onEmailUniqueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginRegister(string username, string mail, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(username, mail, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PrettySecureCloud.LoginService.ILoginService.EndRegister(System.IAsyncResult result) {
            base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string mail = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginRegister(username, mail, password, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            ((PrettySecureCloud.LoginService.ILoginService)(this)).EndRegister(result);
            return null;
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string username, string mail, string password) {
            this.RegisterAsync(username, mail, password, null);
        }
        
        public void RegisterAsync(string username, string mail, string password, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        username,
                        mail,
                        password}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrettySecureCloud.LoginService.User PrettySecureCloud.LoginService.ILoginService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            PrettySecureCloud.LoginService.User retVal = ((PrettySecureCloud.LoginService.ILoginService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginUpdate(PrettySecureCloud.LoginService.User newUserData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdate(newUserData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PrettySecureCloud.LoginService.ILoginService.EndUpdate(System.IAsyncResult result) {
            base.Channel.EndUpdate(result);
        }
        
        private System.IAsyncResult OnBeginUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PrettySecureCloud.LoginService.User newUserData = ((PrettySecureCloud.LoginService.User)(inValues[0]));
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginUpdate(newUserData, callback, asyncState);
        }
        
        private object[] OnEndUpdate(System.IAsyncResult result) {
            ((PrettySecureCloud.LoginService.ILoginService)(this)).EndUpdate(result);
            return null;
        }
        
        private void OnUpdateCompleted(object state) {
            if ((this.UpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAsync(PrettySecureCloud.LoginService.User newUserData) {
            this.UpdateAsync(newUserData, null);
        }
        
        public void UpdateAsync(PrettySecureCloud.LoginService.User newUserData, object userState) {
            if ((this.onBeginUpdateDelegate == null)) {
                this.onBeginUpdateDelegate = new BeginOperationDelegate(this.OnBeginUpdate);
            }
            if ((this.onEndUpdateDelegate == null)) {
                this.onEndUpdateDelegate = new EndOperationDelegate(this.OnEndUpdate);
            }
            if ((this.onUpdateCompletedDelegate == null)) {
                this.onUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDelegate, new object[] {
                        newUserData}, this.onEndUpdateDelegate, this.onUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrettySecureCloud.LoginService.ILoginService.BeginLoadAllServices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadAllServices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> PrettySecureCloud.LoginService.ILoginService.EndLoadAllServices(System.IAsyncResult result) {
            return base.Channel.EndLoadAllServices(result);
        }
        
        private System.IAsyncResult OnBeginLoadAllServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PrettySecureCloud.LoginService.ILoginService)(this)).BeginLoadAllServices(callback, asyncState);
        }
        
        private object[] OnEndLoadAllServices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> retVal = ((PrettySecureCloud.LoginService.ILoginService)(this)).EndLoadAllServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadAllServicesCompleted(object state) {
            if ((this.LoadAllServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadAllServicesCompleted(this, new LoadAllServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadAllServicesAsync() {
            this.LoadAllServicesAsync(null);
        }
        
        public void LoadAllServicesAsync(object userState) {
            if ((this.onBeginLoadAllServicesDelegate == null)) {
                this.onBeginLoadAllServicesDelegate = new BeginOperationDelegate(this.OnBeginLoadAllServices);
            }
            if ((this.onEndLoadAllServicesDelegate == null)) {
                this.onEndLoadAllServicesDelegate = new EndOperationDelegate(this.OnEndLoadAllServices);
            }
            if ((this.onLoadAllServicesCompletedDelegate == null)) {
                this.onLoadAllServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadAllServicesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadAllServicesDelegate, null, this.onEndLoadAllServicesDelegate, this.onLoadAllServicesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PrettySecureCloud.LoginService.ILoginService CreateChannel() {
            return new LoginServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoginService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_ILoginService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoginService)) {
                return new System.ServiceModel.EndpointAddress("http://prettysecurecloud.azurewebsites.net/LoginService.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_ILoginService)) {
                return new System.ServiceModel.EndpointAddress("https://prettysecurecloud.azurewebsites.net/LoginService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private class LoginServiceClientChannel : ChannelBase<PrettySecureCloud.LoginService.ILoginService>, PrettySecureCloud.LoginService.ILoginService {
            
            public LoginServiceClientChannel(System.ServiceModel.ClientBase<PrettySecureCloud.LoginService.ILoginService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUsernameUnique(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("UsernameUnique", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUsernameUnique(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UsernameUnique", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEmailUnique(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("EmailUnique", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEmailUnique(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EmailUnique", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegister(string username, string mail, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = mail;
                _args[2] = password;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Register", _args, result);
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public PrettySecureCloud.LoginService.User EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                PrettySecureCloud.LoginService.User _result = ((PrettySecureCloud.LoginService.User)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdate(PrettySecureCloud.LoginService.User newUserData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = newUserData;
                System.IAsyncResult _result = base.BeginInvoke("Update", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Update", _args, result);
            }
            
            public System.IAsyncResult BeginLoadAllServices(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LoadAllServices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> EndLoadAllServices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType> _result = ((System.Collections.ObjectModel.ObservableCollection<PrettySecureCloud.LoginService.ServiceType>)(base.EndInvoke("LoadAllServices", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ILoginService,
            
            BasicHttpsBinding_ILoginService,
        }
    }
}
